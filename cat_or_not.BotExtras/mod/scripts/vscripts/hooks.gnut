#if SQHOOK
global function init_Hooks
global function SimpleFunc
global function SimpleFunc_Hook

void function init_Hooks()
{
    InitKeyTracking()

	HookOn( "EntityShouldStick", EntityShouldStick_Hook )
	// HookOn( "CodeCallback_ZiplineMount", CodeCallback_ZiplineMount_Hook )
	// HookOn( "PlayerHasBattery", PlayerHasBattery_Hook )
	HookOn( "SimpleFunc", SimpleFunc_Hook )
	HookOn( "SimpleFunc", SimpleFunc_Hook_2 )
}

void function SimpleFunc(int i) {
    printt( "SimpleFunc", i )
}


bool function EntityShouldStick_Hook( bool functionref(entity, entity) orig, entity stickyEnt, entity hitent )
{
    if ( !IsValid(stickyEnt) || !IsValid(stickyEnt.GetOwner()) )
        return true
    
    bool shouldStick = orig(stickyEnt, hitent)

    printt("EntityShouldStick_Hook", shouldStick, stickyEnt, hitent)

    return IsValid(stickyEnt.GetOwner()) ? GetPlayerKey(stickyEnt.GetOwner(), KU) : false;
}

void function CodeCallback_ZiplineMount_Hook( void functionref(entity, entity) orig, entity player, entity zipline )
{
    orig( player, zipline )

    printt("CodeCallback_ZiplineMount_Hook", player, zipline )
}

bool function PlayerHasBattery_Hook( bool functionref(entity) orig, entity player )
{
    bool hasIt = orig( player )

    printt( "CodeCallback_ZiplineMount_Hook", hasIt, player )

    return hasIt
}

void function SimpleFunc_Hook( bool functionref(int) orig, int i )
{
    printt("SimpleFunc_Hook", i)
    
    orig(i + 2)
}

void function SimpleFunc_Hook_2( bool functionref(int) orig, int i )
{
    printt("SimpleFunc_Hook_2", i)
    
    orig(i * 2)
}
#endif