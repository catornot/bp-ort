global function Init_botTicTacToe

const asset Palet = $"models/containers/plastic_pallet_01.mdl"

enum eTicState
{
	PLAYER,
	PLAYER_START,
	MOVE_PREPARE,
    MOVE,
    VRAG,
	OVER,
	WIN,
	LOSE,
	DRAW
}

struct {
	bool active = false
	int connected = 0
	string over = "idk"
	entity move
	vector to
	array<int> to_board = [-1, -1]
	entity light_friend
	entity light_vrag
	int next_player = eTicState.PLAYER
	int turns = 0
	array<entity> free = []
	array<entity> destroy = []
	array< array<entity> > board = []
	array< array<int> > board_glow = []
} file

void function Init_botTicTacToe()
{
    #if BP_ORT && CAT_OR_NOT_UTILS
	AddClientCommandCallback("ttt_start", ClientCommand_StartGame)
	AddCallback_OnClientConnected( ClientConnected )
    #endif

	file.board = [[null, null, null], [null, null, null], [null, null, null]]
}

#if BP_ORT && CAT_OR_NOT_UTILS
void function ClientConnected(entity player) {
	if (player.IsBot())
		file.connected++
}

bool function ClientCommand_StartGame(entity player, array<string> args)
{
	if (GetMapName() != "mp_box" || file.active)
		return false

	InitKeyTracking()
	
	file.active = true
	file.board = [[null, null, null], [null, null, null], [null, null, null]]
	file.board_glow = [[0, 0, 0], [0, 0, 0], [0, 0, 0]]
	file.free = []
	file.connected = 0
	file.light_friend = CreateLightSprite( <0,0,50>, <0,0,50>, "0 0 255", 2 )
	file.light_vrag = CreateLightSprite( <0,0,50>, <0,0,50>, "255 0 0", 2 )

	thread GameSetup(player)

	return true
}

void function GameSetup(entity player)
{
	int bots = 11
	for(int i = 1; i <= bots; i++)
	{ 
		if (bots == i)
			BotSpawn("vrag")
		else if (i <= (bots - 1) / 2)
			BotSpawn("x_" + i)
		else
			BotSpawn("o_" + i)
	}

	while(file.connected == bots - 1)
	{
		wait 0
	}

	foreach (entity bot in GetPlayerArray())
	{
		bot.SetInvulnerable()
		
		if (!bot.IsBot())
			continue

		if (StartsWith(bot.GetPlayerName(), "x"))
			SetTeam(bot, player.GetTeam())
		else
			SetTeam(bot, GetOtherTeam(player.GetTeam()))

		if (StartsWith(bot.GetPlayerName(), "vrag"))
			BotSetSimulationType(bot, 23)
		else
			BotSetSimulationType(bot, 22)
	}

	for(int i = 0; i < 9; i++)
	{
		vector origin = < -4800 + 100 * (i / 3), -2310 + 100 * (i % 3), 0 >
		
	    entity prop = CreateEntity( "prop_dynamic" )

	    prop.SetValueForModelKey( Palet )
		prop.kv.fadedist = 1000000
		prop.kv.renderamt = 255
		prop.kv.rendercolor = "81 130 151"
		prop.kv.solid = SOLID_VPHYSICS
		prop.kv.editorclass = "tile"

		SetTeam( prop, 22 )
		prop.SetOrigin( origin )
		prop.SetAngles( <0,0,0> )
	    prop.SetScriptName( (i / 3) + "," + (i % 3) )
		DispatchSpawn( prop )

		file.destroy.append(prop)
	}

	entity vrag
	foreach(entity maybePlayer in GetPlayerArray())
	{
		if (!maybePlayer.IsBot())
			maybePlayer.SetOrigin(< -4742 + 50, -3113, 576 >)
		else if (StartsWith(maybePlayer.GetPlayerName(), "vrag")) 
			maybePlayer.SetOrigin(< -4742 - 50, -3113, 576 >)
		else if (maybePlayer.GetTeam() == player.GetTeam())
			maybePlayer.SetOrigin(< -4742 - 100, -3113 + 100, 576 >)
		else
			maybePlayer.SetOrigin(< -4742 + 100, -3113 + 100, 576 >)

		if (StartsWith(maybePlayer.GetPlayerName(), "vrag")) 
			vrag = maybePlayer
		else if (maybePlayer.IsBot())
			file.free.append(maybePlayer)
			
	}

	print("start" + vrag)

	thread GameRun(player, vrag)
}

void function GameRun(entity player, entity vrag)
{
	BotSetSimulationType(vrag, 23)
	player.EndSignal( "OnDeath" )
 	OnThreadEnd(
		function() : ( player )
		{
			ServerCommand("kick_all_bots")
			file.light_friend.Destroy()
			file.light_vrag.Destroy()
			file.active = false

			foreach (entity ent in file.destroy)
				ent.Destroy()

			file.destroy = []
		}
	)

	int state = eTicState.PLAYER_START

	for(;;)
	{
		int winc = WhoWins();
		if (winc != 0 && winc == 1)
			state = eTicState.WIN
		else if (winc != 0 && winc == 2)
			state = eTicState.LOSE		
		else if (isADraw())
			state = eTicState.Draw	

		switch(state)
		{
			case eTicState.PLAYER_START:
				NSSendAnnouncementMessageToPlayer( player, "Your Turn", "You are x btw", <225, 0, 0>, 1, 0)
				state = eTicState.PLAYER
				break
			case eTicState.PLAYER:
				TraceResults trace = TraceLine( player.CameraPosition(), GetPlayerCrosshairOrigin(player) + <0,0,-50>, [ player ], TRACE_MASK_SHOT, TRACE_COLLISION_GROUP_NONE)

				if (trace.endPos.z < 300)
					file.light_friend.SetOrigin(trace.endPos)

				BotSetTargetPos(vrag, trace.endPos)
				if (!GetPlayerKeysList(player)[KU])
					break

				if (IsValid(trace.hitEnt) && trace.hitEnt.GetTeam() == 22 && split( trace.hitEnt.GetScriptName(), "," ).len() == 2)
				{
					array<string> cords = split( trace.hitEnt.GetScriptName(), "," )

					if (file.board[cords[0].tointeger()][cords[1].tointeger()] == null)
					{
						if (!StartMove(player.GetTeam(), trace.hitEnt.GetOrigin() + <20, 20, 0>))
							state = eTicState.OVER
						else
							state = eTicState.MOVE_PREPARE

						file.next_player = eTicState.VRAG
						file.board[cords[0].tointeger()][cords[1].tointeger()] = file.move
						file.to_board = [cords[0].tointeger(), cords[1].tointeger()]
					}
				}
					
				break
			case eTicState.VRAG:
				file.next_player = eTicState.PLAYER

				for(int x = 0; x < 3; x++)
				{
					for(int y = 0; y < 3; y++)
					{
						wait 0.5
						entity prop = GetEntArrayByScriptName(x + "," + y)[0]
					
						file.light_vrag.SetOrigin(prop.GetOrigin())
						BotSetTargetPos(vrag, prop.GetOrigin())

						if(ScoreLocation(x, y, 2, file.turns * 3) < 6)
							continue							
						
						if (!StartMove(vrag.GetTeam(), prop.GetOrigin() + <20, 20, 0>))
							state = eTicState.OVER
						else
							state = eTicState.MOVE_PREPARE

						file.next_player = eTicState.PLAYER
						file.board[x][y] = file.move
						file.to_board = [x, y]
						break
					}
					file.turns++;

					if (state != eTicState.VRAG)
						break
				}
				
				break
			case eTicState.MOVE_PREPARE:
				file.turns = 0
				BotSetSimulationType(file.move, 22)

				wait 1

				BotSetSimulationType(file.move, 21)
				BotSetTargetPos(file.move, file.to)

				file.light_friend.SetOrigin(<0,0,0>)
				file.light_vrag.SetOrigin(<0,0,0>)
				state = eTicState.MOVE
				break
			case eTicState.MOVE:
				while(Distance2D(file.move.GetOrigin(), file.to) > 10)
					wait 0

				state = file.next_player
				BotSetSimulationType(file.move, 23)
				BotSetTargetPos(file.move, vrag.GetOrigin())

				wait 1
				file.board_glow[file.to_board[0]][file.to_board[1]] = state == eTicState.PLAYER ? 2 : 1				
				break
			case eTicState.OVER:
				NSSendAnnouncementMessageToPlayer(player, "It's over", file.over, <225, 0, 0>, 1, 0)
				return
			case eTicState.WIN:
				NSSendAnnouncementMessageToPlayer(player, "You Won", "Wow", <0, 225, 0>, 1, 0)
				printBoard()
				return
			case eTicState.LOSE:				
				NSSendAnnouncementMessageToPlayer(player, "You Lost", "You lost to a random number generator", <225, 0, 0>, 1, 0)
				printBoard()
				return
			case eTicState.DRAW:				
				NSSendAnnouncementMessageToPlayer(player, "It's a Draw or smth like that", "at least you didn't lose", <0, 0, 225>, 1, 0)
				printBoard()
				return
		}

		wait 0
	}
}

bool function StartMove(int team, vector to)
{
	file.move = null
	foreach (int index, entity bot in file.free)
	{
		if (bot.GetTeam() != team)
			continue
		file.move = bot
		file.free.remove(index)
		break
	}

	if (file.move == null)
	{
		file.over = "Ran out of bots lol"
		return false
	}

	file.to = to
	
	return true
}

int function ScoreLocation(int x, int y, int player, int boost = 0)
{
	int score = boost;
	if (GetBoard(x, y) != 0)
		return -1
	
	file.board_glow[x][y] = player;

	score += RandomInt( 4 )
	score -= RandomInt( 4 )

	int win = WhoWins()
	if (player == win)
		score = 10;
	else if (win == (player == 1 ? 2 : 1))
		score -= 4;

	file.board_glow[x][y] = (player == 1 ? 2 : 1);
	
	win = WhoWins()
	if (win == (player == 1 ? 2 : 1))
		score = 10;

	file.board_glow[x][y] = 0;
	return score
}

int function WhoWins() {
	// vertical
	for(int i = 0; i < 3; i++) {
		int start = GetBoard(i, 0, 0);
		array<bool> fail = [false, true, true];
		
		for(int j = 1; j < 3; j++) {
			fail[j] = start != GetBoard(i, j, 0)
		}

		if (!fail[0] && !fail[1] && !fail[2])
			return start
	}

	// horizontal
	for(int i = 0; i < 3; i++) {
		int start = GetBoard(0, i, 0);
		array<bool> fail = [false, true, true];
		
		for(int j = 1; j < 3; j++) {
			fail[j] = start != GetBoard(j, i, 0)
		}

		if (!fail[0] && !fail[1] && !fail[2])
			return start
	}

	if (GetBoard(0, 0, 0) == GetBoard(1, 1, 0) && GetBoard(0, 0, 0) == GetBoard(2, 2, 0))
		return GetBoard(0, 0)

	if (GetBoard(2, 0, 0) == GetBoard(1, 1, 0) && GetBoard(2, 0) == GetBoard(0, 2, 0))
		return GetBoard(2, 0)

	return 0;
}

bool function isADraw() {
	for(int i = 0; i < 3; i++) {
		for(int j = 0; j < 3; j++) {
			if (GetBoard(i, j) == 0)
				return false;
		}
	}

	return true;
}

int function GetBoard(int x, int y, int filter = -1) {
	return file.board_glow[x][y] == filter ? ((x << 10) | (y << 2) | 100) : file.board_glow[x][y]
}

void function printBoard() {
	for(int i = 0; i < 3; i++) {
		string line = ""
		for(int j = 0; j < 3; j++) {
			line += " " + GetBoard(i, j)
		}
		print(line)
	}
}

#endif
